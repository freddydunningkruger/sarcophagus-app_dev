{"version":3,"sources":["web3/chains.js","constants/index.js","web3/userSupplied.js","utils/arweave.js","utils/bytes.js","components/BlockChainContext/useSarcophagus.js","components/customHooks/useCheckStatus/index.js","components/customHooks/useCheckStatus/useSarcophagusCheck.js","components/customHooks/useCheckStatus/useFileSentCheck.js","components/customHooks/useCheckStatus/useFileMiningCheck.js","components/BlockChainContext/useSarcophagi.js","web3/index.js","web3/local.js","web3/fallback.js","components/BlockChainContext/index.js","components/BlockChainContext/contracts.js","components/BlockChainContext/useArchaeologists.js","components/BlockChainContext/myBalances.js","assets/images/upload.svg","components/Dropzone.js","components/Error.js","components/layout/InfoBox.js","components/layout/SectionContainer.js","assets/images/question.svg","components/layout/Title.js","components/layout/TwoColumnContainer.js","components/create/FileDrop.js","assets/images/sarcophagus.svg","components/create/PageHeading.js","components/layout/Input.js","components/create/NameAndRecipient.js","assets/images/clock.svg","components/layout/Select.js","components/CustomTimeSelect.js","components/create/ResurrectionTime.js","components/create/Fees.js","components/create/ArchTableRow.js","components/create/PageSelect.js","utils/bigNumbers.js","assets/images/icon.svg","assets/images/iconBlack.svg","components/create/ArchaeologistsList.js","components/customHooks/usePagination.js","components/customHooks/useArchaeologistsSort.js","components/create/PickArchaeologist.js","components/customHooks/useFileEncryption.js","components/customHooks/useSarcophagusCreate.js","components/layout/Button.js","components/create/index.js","components/create/initialValues.js","components/create/validationSchema.js","assets/images/tomb.svg","components/Tomb/ResurrectionTimer.js","components/customHooks/useTimers.js","components/Tomb/SarcophagiList.js","components/Tomb/index.js","components/Body.js","components/Footer.js","assets/images/logo.png","assets/images/wallet.svg","components/nav/NavLink.js","components/Header.js","router/index.js","App.js","reportWebVitals.js","index.js","utils/datetime.js","utils/index.js"],"names":["supportedChains","useAddresses","chainId","useState","addresses","setAddresses","useEffect","parseInt","process","REACT_APP_LOCAL_CHAINID","sarcophagus","REACT_APP_LOCAL_SARCOPHAGUS_ADDRESS","sarcophagusToken","REACT_APP_LOCAL_SARCOPHAGUS_TOKEN_ADDRESS","labels","createSarco","nameAndRecipient","fileUpload","pickArchaeologist","resurrectionTime","days","createLocationNumberObject","hours","minutes","weekAhead","getUTCDate","monthAhead","threeMonthAhead","STATUSES","SARCOPHAGUS_PENDING","SARCOPHAGUS_SUCCESS","ARWEAVE_STARTED","ARWEAVE_PENDING","ARWEAVE_SUCCESS","ARWEAVE_TIMEOUT","SARCOPHAGUS_AWAIT_SIGN","CHECKING_STATUS","PROCESS_COMPLETE","ERROR","SARCOPHAGUS_FAILED","BLOCKCHAIN_SERVER","ARWEAVE_TRANSACTION_FAILED","ARWEAVE_FILE_ERROR","INTERVAL_LENGTH_SECONDS","INTERVAL_TIMEOUT_MINS","TIMER_DEFAULT","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","useUserSuppliedConnect","provider","setProvider","userSupplied","setUserSupplied","selectedAddress","setSelectedAddress","window","ethereum","detectEthereumProvider","then","injectedProvider","ethers","providers","Web3Provider","on","accounts","length","includes","toast","info","toastId","connect","catch","console","error","initArweave","Arweave","init","host","port","protocol","timeout","logging","arweaveFileTypeExists","arweave","transactionId","a","transactions","get","transaction","contentType","filter","tag","decode","string","map","arweaveFileValid","doubleEncryptedFile","getData","data","buffedData","Buffer","from","buffFile","compare","hexToBytes","hex","pad","byteArray","utils","arrayify","padByte","Uint8Array","useSarcophagus","sarcophagusTokenContract","sarcophagusContract","approved","setApproved","createSarcophagus","sarcophagusName","archaeologist","resurrectionTimeUTC","storageFeeBN","diggingFeeBN","bountyBN","assetDoubleHash","recipientPublicKeyBA","fileType","history","approve","address","BigNumber","pow","sub","txReceipt","log","storageObject","endpoint","localStorage","setItem","JSON","stringify","replace","e","updateSarcophagus","doubleHashUint","AssetDoubleHash","storage","getItem","toLocaleString","parsedStorage","parse","NewPublicKey","AssetId","V","R","S","removeItem","useCheckStatus","setData","archResponse","setArchResponse","currentStatus","setCurrentStatus","setError","useSarcophagusCheck","isSarcophagusMined","useFileSentCheck","useFileMiningCheck","storedData","parseData","state","assetId","useWeb3","setSarcophagusMined","checkForSarcophagus","useCallback","getTransactionReceipt","hash","blockNumber","handleSendFile","archEndpoint","uint8File","btoa","reduce","call","p","c","String","fromCharCode","fileEncoded","fetch","method","body","fileBytes","responseFromArch","ok","Error","json","sendFileToService","checkFileMinedStatus","ARWEAVE_FILE","startTime","Date","getTime","errorRetries","attempt","api","status","interval","setInterval","clearInterval","response","ARWEAVE_TRANSACTION","useSarcophagi","sarcophagi","setSarcophagi","sarcoDoubleHashes","setSarcoDoubleHashes","sarcoCount","setSarcoCount","pendingCount","setPendingCount","getSarcophagiCount","sarcophagusCount","count","getSarcophagiDoubleHashes","sarcophagiDoubleHashes","i","sarcophagusDoubleHash","doubleHash","push","getSarcophagInfo","Promise","all","isZero","toNumber","Array","isArray","doubleHashArray","key","timer","context","createContext","displayName","Provider","children","local","previousProvider","setLocal","useLocalConnect","fallback","next","getDefaultProvider","REACT_APP_DEFAULT_CHAIN_ID","useFallbackConnect","defaultName","name","account","signerOrProvider","web3","setWeb3","getSigner","detectNetwork","network","value","createWeb3Root","useContext","DataProvider","setSarcophagusContract","contract","Contract","SarcophagusABI","useSarcophagusContract","setSarcophagusTokenContract","SarcoTokenABI","useSarcophagusTokenContract","archaeologists","setArchaeologists","arcAddresses","arcCount","setArcCount","getArchaeologistCount","archaeologistCount","getArchaeologistIndexes","archaeologistAddresses","getArchaeologistInfo","filteredArchaeologists","v","freeBond","useArcheologists","allowance","setAllowance","useSarcoAllowance","dataContext","sarcoAllowance","createDataRoot","useData","border","base","flex","font","FileDropzone","handleFile","file","checkfileSize","errors","rest","onDrop","files","getRootProps","getInputProps","className","classnames","multiple","style","height","src","uploadIcon","alt","extraPadding","InfoBox","SectionContainer","MainTitle","title","icon","SubTitleOne","SubTitleTwo","lineHeight","question","paddingTop","ResurrectionClock","values","daysDisplayed","Title","type","TwoColumnContainer","FileDrop","setFieldValue","touched","fileUploaded","PageHeading","sarcophagusIcon","heightOptions","sm","md","lg","xl","baseText","borderText","errorBorderText","TextInput","iPlaceholder","errored","hidden","TextAreaInput","RadioButton","id","htmlFor","Input","NameAndRecipient","handleChange","handleKey","placeholder","onChange","maxLength","marginTop","recipientPublicKey","target","width","Select","CustomTimeSelect","isDisabled","defaultValue","disabled","Object","keys","ResurrectionTime","clock","clockIcon","checked","timeSelect","onClick","getCustomDateUTC","custom","Fees","bounty","diggingFee","ArchTableRow","headerOne","headerTwo","headerThree","PageSelect","page","totalPages","handleNextPage","handlePrevPage","pageNumbers","goToPage","num","makeNumeral","bigNumber","decimals","numeral","formatUnits","getDecimalNumber","getStorageFee","feePerByte","minimumBounty","minimumDiggingFee","size","calculatedFee","mul","ENCRYPTED_BYTE_INCREASE","add","totalFees","ArchaeologistsList","gtSign","selected","handleSelected","setIsDisabled","isBountyLess","lte","parseEther","toString","isDiggingFeeLess","truncate","iconBlack","usePagination","itemsTotal","setPage","setTotalPages","setPageNumbers","Math","floor","arr","perPage","useArchaeologistsSort","filteredList","setList","_","sort","b","PickArchaeologist","archSelected","useFileEncryption","setFile","setFileType","setRecipientPublicKey","fileByteArray","setFileByteArrayArray","fileEncryptedRecipient","setFileEncryptedRecipient","archaeologistPublicKey","setArchaeologistAddress","setDoubleEncryptedFile","setAssetDoubleHash","reader","FileReader","readAsArrayBuffer","onload","result","view","firstEncryption","recipPubKeyBytes","encrypt","encrypted","hashedOnce","keccak256","hashedTwice","secondEncryption","archPubKeyBytes","useSarcophagusCreate","storageFee","setStorageFee","selectedArchaeologist","setSelected","handleArchaeologistSelect","currentPublicKey","handleEmbalming","isHexString","lineHeightOptions","Button","label","_classNames","CreateSarcophagus","useHistory","initialValues","validationSchema","Yup","shape","test","required","when","is","nullable","onSubmit","handleSubmit","handleBlur","ResurrectionTimer","timeTillResurrection","time","setTime","UTCTime","resurrectionDate","remainingTime","getTimeRemaining","sign","now","valueOf","useResurrectionTimer","PendingActionSarcophagus","handleApprove","right","CompletedSarcophagus","top","Sarcophagus","SarcophagiList","Tomb","minheight","Body","path","component","exact","Footer","packageJson","version","NavLink","dest","to","activeClassName","AccountDisplay","Tabs","Top","logo","wallet","Header","AppRouter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","convertToUTC","date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","numDays","today","setDate","setHours","setMinutes","utc","endtime","total","seconds","fullStr","strLen","separator","sepLength","charsToShow","frontChars","ceil","backChars","substr","day","numArray","k","shift","object","forEach","number"],"mappings":"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","file":"static/js/main.8a8574d7.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst supportedChains = () => {\n  const dev = process.env.NODE_ENV !== 'production' ? [parseInt(process.env.REACT_APP_LOCAL_CHAINID, 10)] : []\n  return [...dev, 5]\n}\n\nconst useAddresses = chainId => {\n  const [addresses, setAddresses] = useState()\n\n  useEffect(() => {\n    if (chainId === parseInt(process.env.REACT_APP_LOCAL_CHAINID, 10)) {\n      setAddresses({\n        sarcophagus: process.env.REACT_APP_LOCAL_SARCOPHAGUS_ADDRESS,\n        sarcophagusToken: process.env.REACT_APP_LOCAL_SARCOPHAGUS_TOKEN_ADDRESS\n      })\n    } else if (chainId === 5) {\n      setAddresses({\n        sarcophagus: '0xAcD4684Ad0d02A5C4ce606c7951Ce949e77FC01b',\n        sarcophagusToken: '0x1Ca4f48412216A886079Fd770E8026B4E2a96FB2'\n      })\n    }\n  }, [chainId])\n\n  return addresses\n}\n\nexport {\n  supportedChains,\n  useAddresses\n} ","import { createLocationNumberObject } from \"../utils\"\nimport { getUTCDate } from \"../utils/datetime\"\n\nexport const labels = {\n  createSarco: \"Create a Sarcophagus\",\n  nameAndRecipient: \"Name Sarcophagus and add your recipient\",\n  fileUpload: \"Upload your file to your Sarcophagus\",\n  pickArchaeologist: \"Pick an Archaeologist\",\n  resurrectionTime: \"Set resurrection time\"\n}\n\nexport const sarcophagusInitialValues = {\n  sarcophagusName: false,    // (name) string memory\n  archaeologist: false,      // address\n  resurrectionTime: false,   // uint256\n  storageFee: false,         // uint256\n  diggingFee: false,         // uint256\n  bounty: false,             // uint256\n  assetDoubleHash: false,    // bytes32\n  recipientPublicKey: false, // bytes memory\n}\n\nexport const days = createLocationNumberObject(365, true)\nexport const hours = createLocationNumberObject(23)\nexport const minutes = createLocationNumberObject(59)\n\nexport const weekAhead = getUTCDate(7)\nexport const monthAhead = getUTCDate(30)\nexport const threeMonthAhead = getUTCDate(90)\n\nexport const STATUSES = {\n  SARCOPHAGUS_PENDING: 'Sarcophagus mining',\n  SARCOPHAGUS_SUCCESS: 'Sarcophagus mined!',\n  ARWEAVE_STARTED: 'File is being uploaded',\n  ARWEAVE_PENDING: 'File is being buried',\n  ARWEAVE_SUCCESS: 'File buried!',\n  ARWEAVE_TIMEOUT: 'Timed out',\n  SARCOPHAGUS_AWAIT_SIGN: 'Tx signing needed',\n  CHECKING_STATUS: 'Checking status...',\n  PROCESS_COMPLETE: 'Sarcophagus buried'\n}\n\nexport const ERROR = {\n  SARCOPHAGUS_FAILED: '',\n  BLOCKCHAIN_SERVER: 'There was an error connection to blockchain',\n  ARWEAVE_TRANSACTION_FAILED: 'There was an error connecting to service',\n  ARWEAVE_FILE_ERROR: 'There was an error sending file',\n}\n\nexport const INTERVAL_LENGTH_SECONDS = 5\nexport const INTERVAL_TIMEOUT_MINS = 15\nexport const RETRIES = 2\n\nexport const TIMER_DEFAULT = '0 days 00:00:00'","import { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\nimport { toast } from 'react-toastify'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { supportedChains } from './chains'\nimport detectEthereumProvider from '@metamask/detect-provider'\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"27e484dcd9e3efcfd25a83a78777cdf1\",\n    },\n  },\n}\n\nconst web3Modal = new Web3Modal({ providerOptions })\n\nconst useUserSuppliedConnect = () => {\n  const [provider, setProvider] = useState(null)\n  const [userSupplied, setUserSupplied] = useState(null)\n  const [ selectedAddress, setSelectedAddress ]= useState(false)\n\n  // allows auto connection to injected provider\n  useEffect(() => {\n    if(!window.ethereum && !provider) return\n    setSelectedAddress(window.ethereum)\n  }, [ provider ])\n\n  useEffect(() => {\n    detectEthereumProvider().then(injectedProvider => {\n      if(injectedProvider && selectedAddress) {\n        setProvider(injectedProvider)\n        setUserSupplied(new ethers.providers.Web3Provider(injectedProvider))\n      }\n    })\n  }, [selectedAddress])\n\n  // listens for connection click\n  web3Modal.on('connect', provider => {\n    setProvider(provider)\n    setUserSupplied(new ethers.providers.Web3Provider(provider))\n  })\n\n  // allows for fallback when user is disconnected or change to unsupported network\n  useEffect(() => {\n    if (provider) {\n      provider.on('accountsChanged', accounts => {\n        if (accounts.length === 0) {\n          setProvider(null)\n          setUserSupplied(null)\n        }  \n      })\n      provider.on('chainChanged', chainId => {\n        if (!supportedChains().includes(parseInt(chainId))) {\n          toast.info('Switch to a supported network', {\n            toastId: 'switchNetwork'\n          })\n          setProvider(null)\n          setUserSupplied(null)\n        }  \n      })\n    }\n  }, [provider])\n\n  return userSupplied\n}\n\nconst connect = () => {\n  web3Modal.connect().catch(console.error)\n}\n\nexport { useUserSuppliedConnect, connect }","import Arweave from 'arweave'\n\nconst initArweave = () => {\n  return Arweave.init({\n    host: 'arweave.net',// Hostname or IP address for a Arweave host\n    port: 443,          // Port\n    protocol: 'https',  // Network protocol http or https\n    timeout: 20000,     // Network request timeouts in milliseconds\n    logging: false,     // Enable network request logging\n  })\n}\n\nconst arweaveFileTypeExists = async (arweave, transactionId) => {\n  return arweave.transactions.get(transactionId).then(transaction => {\n    const contentType = transaction.get('tags').filter(tag =>\n      tag.get('name', {decode: true, string: true}) === 'Content-Type'\n    ).map(tag => tag.get('value', {decode: true, string: true}))\n\n    return contentType.length && contentType[0] !== \"\"\n  })\n}\n\nconst arweaveFileValid = async (arweave, transactionId, doubleEncryptedFile) => {\n  try {\n    const data = await arweave.transactions.getData(transactionId, {decode: true})\n    const buffedData = Buffer.from(data)\n    const buffFile = Buffer.from(doubleEncryptedFile.data)\n    return (Buffer.compare(buffedData, buffFile) === 0)\n  } catch (e) {\n    console.error(e)\n  }\n}\n\n\nexport {\n  initArweave,\n  arweaveFileTypeExists,\n  arweaveFileValid,\n}","import { utils } from 'ethers'\n\nconst hexToBytes = (hex, pad = false) => {\n  let byteArray = utils.arrayify(hex)\n  if (pad) {\n    let padByte = new Uint8Array([4])\n    return Buffer.from(new Uint8Array([...padByte, ...byteArray]))\n  } else {\n    return Buffer.from(byteArray)\n  }\n}\n\nexport {\n  hexToBytes\n}","import {BigNumber, utils} from 'ethers'\nimport { useState } from 'react'\n\nconst useSarcophagus = (sarcophagusTokenContract, sarcophagusContract) => {\n  // TODO Will need to replace this with checking allowances for approval\n  const [ approved, setApproved ] = useState(false)\n  const createSarcophagus = async (sarcophagusName, archaeologist, resurrectionTimeUTC, storageFeeBN, diggingFeeBN, bountyBN, assetDoubleHash, recipientPublicKeyBA, doubleEncryptedFile, fileType, history) => {\n    /* Approve Transaction */\n\n    sarcophagusTokenContract.approve(sarcophagusContract?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1)))\n      .then((txReceipt) => {\n        console.log(\"🚀 approve ~txReceipt\", txReceipt)\n        setApproved(true)\n        /* Create Sarco Transaction */\n        sarcophagusContract.createSarcophagus(sarcophagusName, archaeologist.archaeologist, resurrectionTimeUTC, storageFeeBN, diggingFeeBN, bountyBN, assetDoubleHash, recipientPublicKeyBA)\n          .then((txReceipt) => {\n            console.log(\"🚀 create ~txReceipt\", txReceipt)\n\n            /* Send File to Archaeologist */\n            const storageObject = {sarcophagusName: sarcophagusName, doubleEncryptedFile: doubleEncryptedFile, fileType: fileType, endpoint: archaeologist.endpoint, txReceipt: txReceipt}\n            localStorage.setItem(assetDoubleHash, JSON.stringify(storageObject))\n            \n            history.replace('/')\n          }).catch(e => console.error(\"Error creating Sarcophagus:\", e))\n      }).catch(e => console.error(\"Error during approval process:\", e))\n  }\n\n  const updateSarcophagus = async (sarcophagus) => {\n    try {\n\n      const doubleHashUint = Buffer.from(utils.arrayify(sarcophagus.AssetDoubleHash))\n      const storage = localStorage.getItem(doubleHashUint.toLocaleString())\n      const parsedStorage = JSON.parse(storage)\n\n      let { NewPublicKey, AssetDoubleHash, AssetId, V, R, S } = parsedStorage\n      NewPublicKey = Buffer.from(NewPublicKey, 'base64')\n\n      if(!approved) {\n        await sarcophagusTokenContract.approve(sarcophagusContract?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1)))\n      }\n      const txReceipt = await sarcophagusContract.updateSarcophagus(NewPublicKey, AssetDoubleHash, AssetId, V, R, S)\n      console.log(\"🚀 update ~txReceipt\", txReceipt)\n      // remove local storage items\n      localStorage.removeItem(AssetDoubleHash.toLocaleString())\n    \n    } catch (e) {\n      console.error('There was a problem updating sarcophagus')\n    }\n  }\n\n  return { createSarcophagus, updateSarcophagus }\n\n}\n\n\n\nexport {\n  useSarcophagus\n}","import { useEffect, useState } from \"react\"\nimport { utils } from \"ethers\";\nimport { STATUSES } from '../../../constants'\nimport useSarcophagusCheck from \"./useSarcophagusCheck\";\nimport useFileSentCheck from \"./useFileSentCheck\";\nimport useFileMiningCheck from \"./useFileMiningCheck\";\n\nconst useCheckStatus = (assetDoubleHash=false, sarcophagus) => {\n  const [ doubleHashUint ] = useState(Buffer.from(utils.arrayify(assetDoubleHash)))\n  const [ data, setData] = useState(false)\n  const [ archResponse, setArchResponse ] = useState({})\n  const [ currentStatus, setCurrentStatus ] = useState(STATUSES.CHECKING_STATUS)\n  const [ error, setError ] = useState(false)\n\n  // check localStorage data on sarcophagus\n  const { isSarcophagusMined } = useSarcophagusCheck(data, setCurrentStatus, error, setError)\n\n  // send file is not sent\n  useFileSentCheck(isSarcophagusMined, setArchResponse, data, setCurrentStatus, error, setError)\n\n  // check file mining status\n  useFileMiningCheck(archResponse, setArchResponse, setCurrentStatus, error, setError)\n\n\n  // check local storage for stored data on sarcophagi if exists\n  useEffect(() => {\n    if(!doubleHashUint) return\n      const storedData = localStorage.getItem(doubleHashUint.toLocaleString())\n      const parseData = JSON.parse(storedData)\n      // if there is no stored data then process should be finished This will probably need to more indepth check\n      if(!storedData) {\n          // check for state of 2 on sarcophagus for unwrapping\n          if(sarcophagus?.state === 2) {\n            return\n          }\n          // if no assetId on sarcophagus, mark as finished\n          if(sarcophagus?.assetId) {\n            setCurrentStatus(STATUSES.PROCESS_COMPLETE)\n            return\n          }\n      } else {\n        // if there is an AssetId skip to checking mining status\n        if(parseData?.AssetId) {\n          setArchResponse(parseData)\n          return\n        }\n        // sets storages data to start process from start\n        setData(parseData)\n      }\n  }, [doubleHashUint, sarcophagus])\n  \n  \n  console.log('STATUS', currentStatus)\n  console.log('ERROR', error)\n  return { currentStatus, error }\n}\n\nexport default useCheckStatus","import { useWeb3 } from \"../../../web3\"\nimport { useCallback, useState, useEffect } from 'react'\nimport { ERROR, STATUSES } from \"../../../constants\"\n\nconst useSarcophagusCheck = (data, setCurrentStatus, error, setError) => {\n    const { provider } = useWeb3()\n    const [ isSarcophagusMined, setSarcophagusMined ] = useState(false)\n  \n    const checkForSarcophagus = useCallback( async () => {\n      try {\n        const txReceipt = await provider.getTransactionReceipt(data.txReceipt.hash)\n        if(txReceipt && txReceipt.blockNumber) {\n          setSarcophagusMined(true)\n          setCurrentStatus(STATUSES.SARCOPHAGUS_SUCCESS)\n        } \n      } catch (e) {\n        console.error(e)\n        setError(ERROR.BLOCKCHAIN_SERVER)\n      }\n    },[ data.txReceipt, provider , setError, setCurrentStatus])\n  \n    // check localStorage data on sarcophagus\n    useEffect(() => {\n      if(!data) return\n      if(error) return\n      checkForSarcophagus()\n    }, [data, checkForSarcophagus, error])\n  \n    return { isSarcophagusMined }\n  }\n\nexport default useSarcophagusCheck","import { useCallback, useEffect } from 'react'\nimport { ERROR, STATUSES } from '../../../constants'\n\nconst useFileSentCheck = ( isSarcophagusMined, setArchResponse, data, setCurrentStatus, error, setError ) => {\n    \n    const handleSendFile = useCallback( async (doubleEncryptedFile, fileType, endpoint) => {\n      try {\n        const archEndpoint = 'http://' + endpoint + '/file'\n        const uint8File = new Uint8Array(doubleEncryptedFile.data)\n        const fileEncoded = await btoa([].reduce.call(uint8File, function (p, c) { return p + String.fromCharCode(c) }, ''))\n        const responseFromArch = await fetch(archEndpoint, {\n          method: 'POST',\n          body: JSON.stringify({\n            fileType: fileType,\n            fileBytes: fileEncoded\n          })\n        })\n        // TODO: set explicit error response from arch service\n        if (!responseFromArch.ok)  throw new Error(\"Failed to send file\")\n        const data = await responseFromArch.json()\n        return data\n      } catch (e) {\n        console.error(e)\n        setError(ERROR.ARWEAVE_FILE_ERROR)\n      }\n    }, [setError])\n    \n    const sendFileToService = useCallback( async () => {\n      try {\n        const {doubleEncryptedFile, fileType, endpoint, txReceipt } = data\n        setCurrentStatus(STATUSES.ARWEAVE_STARTED)\n        const responseFromArch = await handleSendFile(doubleEncryptedFile, fileType, endpoint)\n        if(!responseFromArch?.AssetId) {\n          setError(ERROR.ARWEAVE_TRANSACTION_FAILED)\n          setCurrentStatus(ERROR.ARWEAVE_TRANSACTION_FAILED)\n          return\n        }\n  \n        let { NewPublicKey, AssetDoubleHash, AssetId, V, R, S } = responseFromArch \n        const storageObject = {\n            NewPublicKey: NewPublicKey, \n            AssetDoubleHash: AssetDoubleHash, \n            V: V, \n            R: R, \n            S: S, \n            AssetId: AssetId, \n            doubleEncryptedFile:doubleEncryptedFile, \n            txReceipt: txReceipt\n          }\n        localStorage.setItem(AssetDoubleHash, JSON.stringify(storageObject))\n        setArchResponse(storageObject)\n        setCurrentStatus(STATUSES.ARWEAVE_PENDING)\n          \n        } catch(e) {\n          setError(ERROR.ARWEAVE_TRANSACTION_FAILED)\n          console.error(e)\n        }\n      },[ data, handleSendFile, setArchResponse, setCurrentStatus, setError ])\n  \n    useEffect(() => {\n      if(!isSarcophagusMined) return\n      if(error) return\n      sendFileToService()\n    },[sendFileToService, isSarcophagusMined, error])\n  }\n\n  export default useFileSentCheck","import { useCallback, useEffect } from \"react\"\nimport { ERROR, INTERVAL_LENGTH_SECONDS, INTERVAL_TIMEOUT_MINS, STATUSES } from \"../../../constants\"\nimport { arweaveFileTypeExists, arweaveFileValid, initArweave } from \"../../../utils/arweave\"\n\nconst useFileMiningCheck = (archResponse, setArchResponse, setCurrentStatus, error, setError) => {\n\n    const checkFileMinedStatus = useCallback(async () => {\n        const Arweave = initArweave()\n        let { AssetId, doubleEncryptedFile } = archResponse\n        const fileValid = await arweaveFileValid(Arweave, AssetId, doubleEncryptedFile)\n      \n        if (!fileValid) {\n          setError(ERROR.ARWEAVE_FILE)\n        }\n        /* Wait for TX to be mined */\n        const startTime = new Date().getTime();\n        let errorRetries = 2\n        let attempt = 0\n        const firstRequest = await Arweave.api.get(`tx/${AssetId}`)\n        if(firstRequest.status === 200) {\n          setCurrentStatus(STATUSES.SARCOPHAGUS_AWAIT_SIGN)\n          setArchResponse(false)\n          return\n        }\n        setCurrentStatus(STATUSES.ARWEAVE_PENDING)\n        const interval = setInterval(async () => {\n          /* Stop checking and fail after 15 minutes */\n          if (new Date().getTime() - startTime > (INTERVAL_TIMEOUT_MINS * 60 * 1000)) {\n            clearInterval(interval);\n            setCurrentStatus(STATUSES.ARWEAVE_TIMEOUT)\n          }\n          try {\n            const response = await Arweave.api.get(`tx/${AssetId}`)\n            switch (response.status) {\n              case 202:\n                attempt += 1\n                console.log(attempt)\n                break;\n              case 200:\n                /* Successful Tx */\n                clearInterval(interval)\n                /* Check that content type tag isn't empty */\n                const fileTypeExists = await arweaveFileTypeExists(Arweave, AssetId)\n                if (!fileTypeExists) {\n                  setError(ERROR.ARWEAVE_FILE)\n                }\n                setCurrentStatus(STATUSES.SARCOPHAGUS_AWAIT_SIGN)\n                setArchResponse(false)\n                \n                  break;\n              default:\n      \n              /* Problem with the Tx (status is something other than 202 or 200) */\n              if (errorRetries > 0) {\n                errorRetries -= 1\n              } else {\n                clearInterval(interval)\n                setError(ERROR.ARWEAVE_TRANSACTION)\n              }\n            }\n          } catch {\n            /* Error querying arweave */\n            if (errorRetries > 0) {\n              errorRetries -= 1\n            } else {\n              clearInterval(interval)\n              setError(ERROR.ARWEAVE_TRANSACTION)\n            }\n          }\n        }, INTERVAL_LENGTH_SECONDS * 1000)\n      },[archResponse, setArchResponse, setCurrentStatus, setError])\n    \n    \n      useEffect(() => {\n        if(!archResponse?.AssetId) return\n        if(error) return\n        checkFileMinedStatus()\n      }, [checkFileMinedStatus, archResponse, error])\n}\n\nexport default useFileMiningCheck","import { utils } from 'ethers';\nimport { useCallback, useEffect, useState } from 'react';\n\nconst useSarcophagi = (sarcophagusContract) => {\n  const [ sarcophagi, setSarcophagi ] = useState([])\n  const [ sarcoDoubleHashes, setSarcoDoubleHashes ] = useState(false) \n  const [ sarcoCount, setSarcoCount ] = useState(false)\n  const [ pendingCount, setPendingCount ] = useState(0)\n  const storage = window.localStorage\n  \n  const getSarcophagiCount = useCallback( async () => {\n    try {\n      const count = await sarcophagusContract.sarcophagusCount()\n      setSarcoCount(count)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [sarcophagusContract])\n\n  const getSarcophagiDoubleHashes = useCallback( async (count) => {\n    try {\n      const sarcophagiDoubleHashes = []\n      for(let i = 0; i <= count - 1; i++) {\n        const doubleHash = await sarcophagusContract.sarcophagusDoubleHash(i)\n        sarcophagiDoubleHashes.push(doubleHash)\n      }\n      await setSarcoDoubleHashes(sarcophagiDoubleHashes)\n    } catch (error) {\n      console.error(error)\n    }\n  },[sarcophagusContract])\n\n  const getSarcophagInfo = useCallback(async () => {\n    try {\n      const sarcophagi = await Promise.all(sarcoDoubleHashes.map( async (doubleHash) => {\n        return {\n          ...await sarcophagusContract.sarcophagus(Buffer.from(utils.arrayify(doubleHash))), AssetDoubleHash: doubleHash\n        }\n      } )).catch(e => console.log(\"e\", e))\n\n      await setSarcophagi(sarcophagi)\n    } catch (error) {\n      console.error(error)\n    }\n  },[sarcoDoubleHashes, sarcophagusContract])\n\n  useEffect(() => {\n    if(!sarcophagusContract) return\n    getSarcophagiCount()\n  },[ getSarcophagiCount, sarcophagusContract])\n\n\n  useEffect(() => {\n    if (!sarcoCount || !sarcophagusContract) return\n    if (sarcoCount.isZero()) return\n    getSarcophagiDoubleHashes(sarcoCount.toNumber())\n  },[ sarcoCount, getSarcophagiDoubleHashes, sarcophagusContract ])\n\n  useEffect(() => {\n    if(!sarcoCount || !sarcophagusContract || !Array.isArray(sarcoDoubleHashes)) return\n    getSarcophagInfo() \n  },[ getSarcophagiCount, getSarcophagiDoubleHashes, getSarcophagInfo, sarcoDoubleHashes, sarcoCount, sarcophagusContract ])\n\n  useEffect(() => {\n    if(!sarcophagi.length) return\n    let count = 0\n    // maps sarocophagus double hashes\n    const doubleHashArray = sarcophagi.map(sarcophagus => Buffer.from(utils.arrayify(sarcophagus.AssetDoubleHash)).toLocaleString())\n    // compares the stored keys versus mined sarcophagus if no match adds to count.\n    for(let i = 0; i < storage.length; i++) {\n      const key = storage.key(i)\n      if(!doubleHashArray.includes(key)) {\n        count += 1\n      }\n    }\n    setPendingCount(count)\n  }, [sarcophagi, storage])\n\n  useEffect(() => {\n    if(!storage.length) return\n    if(pendingCount === 0) return\n    console.log('hello')\n    // sets a interval timer to check for newly minded sarcophagus if count != 0\n    const timer = setInterval(() => {\n      console.log('Pending Sarcophagus are being Mined...')\n      getSarcophagiCount()\n    }, 5000)\n    return () => clearInterval(timer)\n  \n  }, [ storage, pendingCount, getSarcophagiCount ])\n  \n  return { sarcophagi, pendingCount }\n}\n\nexport { useSarcophagi }\n","import { useEffect, useState, createContext, useContext } from 'react'\nimport { useFallbackConnect } from './fallback'\nimport { useLocalConnect } from './local'\nimport { useUserSuppliedConnect } from './userSupplied'\nimport { supportedChains } from './chains'\n\nlet context\n\nconst createWeb3Root = () => {\n  context = createContext()\n\n  context.displayName = 'Web3 Provider'\n  const Provider = context.Provider\n\n  return ({ children }) => {\n    const userSupplied = useUserSuppliedConnect()\n    const local = useLocalConnect(!!userSupplied)\n    const fallback = useFallbackConnect(!!local)\n\n    const defaultName = 'Not connected'\n\n    const [web3, setWeb3] = useState({\n      name: defaultName,\n      account: false,\n      chainId: null,\n      provider: null,\n      signerOrProvider: null,\n    })\n\n    useEffect(() => {\n      if (userSupplied?.provider && supportedChains().includes(parseInt(userSupplied?.provider.chainId))) {\n        setWeb3({\n          name: 'Injected provider',\n          account: userSupplied.provider.selectedAddress,\n          chainId: parseInt(userSupplied.provider.chainId),\n          provider: userSupplied,\n          signerOrProvider: userSupplied.getSigner(),\n        })\n      } else if (local) {\n        local.detectNetwork().then(network => {\n          setWeb3({\n            name: 'Local provider',\n            account: false,\n            chainId: network.chainId,\n            provider: local,\n            signerOrProvider: local,\n          })\n        }).catch(console.error)\n      } else if (fallback) {\n        setWeb3({\n          name: 'Fallback provider',\n          account: false,\n          chainId: fallback.network.chainId,\n          provider: fallback,\n          signerOrProvider: fallback,\n        })\n      } else {\n        setWeb3({\n          name: defaultName,\n          account: false,\n          chainId: null,\n          provider: null,\n          signerOrProvider: null\n        })\n      }\n    }, [userSupplied, local, fallback])\n    return <Provider value={web3}>{children}</Provider>\n  }\n}\n\nconst Web3Provider = createWeb3Root()\n\nconst useWeb3 = () => {\n  return useContext(context)\n}\n\nexport { Web3Provider, useWeb3 }\n","import { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\n\nconst useLocalConnect = (previousProvider) => {\n  const [local, setLocal] = useState(null)\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production' || previousProvider) {\n      setLocal(null)\n      return\n    }\n\n    if (local) {\n      return\n    }\n    \n    const provider = new ethers.providers.JsonRpcProvider(process.env.REACT_APP_LOCAL_PROVIDER_URL)\n    provider.detectNetwork()\n      .then(() => setLocal(provider))\n      .catch(() => setLocal(null))\n  }, [local, previousProvider])\n\n  return local\n}\n\nexport { useLocalConnect }\n","import { useState, useEffect } from 'react'\nimport { getDefaultProvider } from 'ethers'\n\nconst useFallbackConnect = (next) => {\n  const [provider, setProvider] = useState(null)\n\n  useEffect(() => {\n    if (provider || !next) return\n\n    setProvider(getDefaultProvider(parseInt(process.env.REACT_APP_DEFAULT_CHAIN_ID, 10)))      \n  }, [provider, next])\n\n  return provider\n}\n\nexport { useFallbackConnect }","import { createContext, useContext } from 'react'\nimport { useArcheologists } from './useArchaeologists'\nimport { useSarcophagusContract, useSarcophagusTokenContract } from './contracts'\nimport { useSarcophagus } from './useSarcophagus'\nimport { useSarcoAllowance } from './myBalances'\n\nlet context\n\nconst createDataRoot = () => {\n  context = createContext()\n  context.displayName = 'Data Provider'\n  const Provider = context.Provider\n\n  \n  return ({ children }) => {\n    const sarcophagusContract = useSarcophagusContract()\n    const sarcophagusTokenContract = useSarcophagusTokenContract()\n\n    const { archaeologists } = useArcheologists(sarcophagusContract)\n    const { createSarcophagus, updateSarcophagus } = useSarcophagus(sarcophagusTokenContract, sarcophagusContract)\n    const { sarcoAllowance } = useSarcoAllowance(sarcophagusContract, sarcophagusTokenContract)\n    const dataContext = {\n      sarcophagusContract,\n      sarcophagusTokenContract,\n      archaeologists,\n      sarcoAllowance,\n      createSarcophagus,\n      updateSarcophagus,\n    }\n    return <Provider value={dataContext}>{children}</Provider>\n  }\n}\n\nconst DataProvider = createDataRoot()\n\nconst useData = () => {\n  return useContext(context)\n}\n\nexport { DataProvider, useData }","import { useEffect, useState } from 'react'\nimport { useWeb3 } from '../../web3'\nimport { Contract } from 'ethers'\nimport { useAddresses } from '../../web3/chains'\nimport SarcophagusABI from './artifacts/SarcophagusABI.json'\nimport SarcoTokenABI from './artifacts/SarcoTokenABI.json'\n\nconst useSarcophagusContract = () => {\n  const { chainId, signerOrProvider } = useWeb3()\n  const addresses = useAddresses(chainId)\n  const [sarcophagusContract, setSarcophagusContract] = useState()\n\n  useEffect(() => {\n    if (!chainId || !addresses || !signerOrProvider) return\n    try{\n      const contract = new Contract(addresses.sarcophagus, SarcophagusABI, signerOrProvider)\n      setSarcophagusContract(contract)\n    } catch (e) {\n      console.log('sarco contract error')\n      console.error(e)\n    }\n  }, [chainId, signerOrProvider, addresses])\n\n  return sarcophagusContract\n}\n\nconst useSarcophagusTokenContract = () => {\n  const { chainId, signerOrProvider } = useWeb3()\n  const addresses = useAddresses(chainId)\n  const [sarcophagusTokenContract, setSarcophagusTokenContract] = useState()\n\n  useEffect(() => {\n    if (!chainId || !addresses || !signerOrProvider) return\n    try {\n      const contract = new Contract(addresses.sarcophagusToken, SarcoTokenABI, signerOrProvider)\n      setSarcophagusTokenContract(contract)\n    } catch (e) {\n      console.log('sarco token contract error')\n      console.error(e)\n    }\n  }, [chainId, signerOrProvider, addresses])\n\n  return sarcophagusTokenContract\n}\n\nexport { \n  useSarcophagusContract,\n  useSarcophagusTokenContract,\n }\n","import { useState, useEffect, useCallback } from 'react'\n\nconst useArcheologists = (sarcophagusContract) => {\n  const [ archaeologists, setArchaeologists ] = useState([])\n  const [ arcAddresses, setAddresses ] = useState(false) \n  const [ arcCount, setArcCount ] = useState(false)\n  \n  const getArchaeologistCount = useCallback( async (sarcophagusContract) => {\n    try {\n      const count = await sarcophagusContract.archaeologistCount() \n      setArcCount(count)\n    } catch (error) {\n      console.error(error)\n    }\n  }, [])\n\n  const getArchaeologistIndexes = useCallback( async (sarcophagusContract, count) => {\n    try {\n      const arcAddresses = []\n      for(let i = 0; i <= count - 1; i++) {\n        const address = await sarcophagusContract.archaeologistAddresses(i)\n        arcAddresses.push(address)\n      }\n      await setAddresses(arcAddresses)\n    } catch (error) {\n      console.error(error)\n    }\n  },[])\n\n  const getArchaeologistInfo = useCallback(async (sarcophagusContract) => {\n    try {\n      const archaeologists = await Promise.all(arcAddresses.map( async (address) => await sarcophagusContract.archaeologists(address) ))\n      const filteredArchaeologists = archaeologists.filter(v => !v.freeBond.isZero())\n      setArchaeologists(filteredArchaeologists)\n    } catch (error) {\n      console.error(error)\n    }\n  },[arcAddresses])\n\n  \n  useEffect(() => {\n    if(!sarcophagusContract) return\n    getArchaeologistCount(sarcophagusContract)\n  },[ getArchaeologistCount, sarcophagusContract ])\n\n\n  useEffect(() => {\n    if (!arcCount || !sarcophagusContract) return\n    if (arcCount.isZero()) return\n    getArchaeologistIndexes(sarcophagusContract, arcCount.toNumber())\n  },[ arcCount, getArchaeologistIndexes, sarcophagusContract ])\n\n  useEffect(() => {\n    if(!arcCount || !sarcophagusContract || !arcAddresses) return\n    getArchaeologistInfo(sarcophagusContract) \n  },[ getArchaeologistCount, getArchaeologistIndexes, getArchaeologistInfo, arcAddresses, arcCount, sarcophagusContract ])\n  \n  return { archaeologists }\n}\n\nexport {\n  useArcheologists\n}","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../../web3'\n\n\nconst useSarcoAllowance = ( sarcophagusContract, sarcophagusTokenContract ) => {\n    const { account } = useWeb3()\n    const [ allowance, setAllowance ] = useState(BigNumber.from(0))\n\n    useEffect(() => {\n        if(!account || !sarcophagusContract || !sarcophagusTokenContract) return\n        sarcophagusTokenContract.allowance(account, sarcophagusContract?.address).then(allowance => {\n            setAllowance(allowance)\n        }).catch(e => console.error(e))\n    }, [account, sarcophagusContract, sarcophagusTokenContract])\n    return allowance\n}\n\nexport { useSarcoAllowance }","export default __webpack_public_path__ + \"static/media/upload.54df37e0.svg\";","import React from 'react'\nimport Dropzone from 'react-dropzone'\nimport uploadIcon from '../assets/images/upload.svg'\nimport classnames from 'classnames'\n\nconst border = \"border-2 border-dashed border-gray-500\"\nconst error = \"border-2 border-dashed border-red\"\nconst base = \"cursor-pointer focus:outline-none\"\nconst flex = \"flex flex-col justify-center items-center\"\nconst font = \"text-white text-md\"\n\nconst FileDropzone = ({handleFile, checkfileSize, file, errors,  ...rest}) => (\n  <Dropzone onDrop={(files) => handleFile(files[0])} >\n    {({ getRootProps, getInputProps }) => !file ? (\n      <div {...getRootProps()} className={errors ? classnames(base, error, flex, font) : classnames(base, border, flex, font)} {...rest}>\n        <input {...getInputProps()} multiple={false}/>\n        <img src={uploadIcon} alt=\"\" className=\"mb-2\"/>\n        <span>Drag and drop</span>\n        <span>or</span>\n        <span className=\"border-b\">browse files</span>\n      </div>\n    ) : (\n      <div {...getRootProps()} className={classnames(base, border, flex, font)} {...rest}>\n        <input {...getInputProps()} multiple={false}/>\n        <div className=\"w-3/4 bg-black flex items-center justify-center text-white border border-gray-500 overflow-hidden\" style={{height: '2.625rem'}}>{file.name}</div>\n      </div>\n    )}\n  </Dropzone>\n)\n\nexport default FileDropzone","import React from 'react'\nimport classnames from 'classnames'\n\nconst Error = ({ extraPadding, children }) => (\n  <div className=\"relative\">\n    <div className={classnames(\"absolute\", extraPadding)}>\n      <span className=\"ml-4 text-xs text-red whitespace-nowrap\">{ children }</span>\n    </div>\n  </div>\n)\n\n\nexport default Error","import React from 'react'\n\nconst InfoBox = ({ children, ...rest }) => (\n  <div className=\"text-gray-400 text-2xs\" {...rest}>\n    { children }\n  </div>\n)\n\nexport default InfoBox","import React from 'react'\nimport classnames from 'classnames'\n\nconst base = \"py-12 pr-2\"\nconst borderBottom = \"border-b border-gray-500\"\n\nconst SectionContainer = ({border=true, children}) => (\n  <div className={border ? classnames(base, borderBottom) : base} >\n    {children}\n  </div>\n)\n\nexport default SectionContainer","export default __webpack_public_path__ + \"static/media/question.d848fe1b.svg\";","import React from 'react'\nimport question from '../../assets/images/question.svg'\n\n\n\nconst MainTitle = ({ title, icon }) => (\n  <div className=\"flex items-center mb-6 whitespace-nowrap\">\n    {icon && <img src={icon} alt=\"\" className=\"mr-4\" />}\n    <span className=\"text-lg\">{ title }</span>\n  </div>\n)\n\nconst SubTitleOne = ({ title, icon=false }) => (\n  <div className=\"flex items-center text-white whitespace-nowrap\">\n    {icon && <img src={icon} alt=\"\" className=\"mr-4\" />}\n    <span className=\"text-base font-bold\">{ title }</span>\n  </div>\n)\n\nconst SubTitleTwo = ({ title }) => (\n  <div className=\"flex mb-2 items-center whitespace-nowrap\">\n    <span className=\"mr-2 text-gray-400 text-sm\" style={{lineHeight: '1.375rem'}}>{ title }</span>\n    <img src={question} alt=\"\" className=\"\" style={{paddingTop: '0.15rem'}}/>\n  </div>\n)\n\nconst ResurrectionClock = ({values}) => (\n  <div className=\"flex items-center whitespace-nowrap\">\n    <span className=\"mr-2 text-gray-400 text-sm\" style={{lineHeight: '1.375rem'}}>Resurrection: {values.daysDisplayed} days 0{values.hours}:0{values.minutes}:00</span>\n    <img src={question} alt=\"\" className=\"\"/>\n  </div>\n)\n\nconst Title = ({ type, ...rest }) => {\n  if(type === 'main') return <MainTitle {...rest} />\n  if(type === 'subOne') return <SubTitleOne {...rest} />\n  if(type === 'subTwo') return <SubTitleTwo {...rest} />\n  if(type === 'resurrection') return <ResurrectionClock {...rest}/>\n  return <></>\n}\n\nexport default Title","import React from 'react'\n\nconst TwoColumnContainer = ({ children }) => (\n  <div className=\"grid grid-cols-2 mt-8 gap-7\">\n      { children }\n  </div>\n)\n\nexport default TwoColumnContainer","import React, { useEffect } from 'react'\nimport { labels } from '../../constants'\nimport FileDropzone from '../Dropzone'\nimport Error from '../Error'\nimport InfoBox from '../layout/InfoBox'\nimport SectionContainer from '../layout/SectionContainer'\nimport Title from '../layout/Title'\nimport TwoColumnContainer from '../layout/TwoColumnContainer'\n\nconst FileDrop = ({handleFile, file, setFieldValue, errors, touched}) => {\n  useEffect(() => {\n    if(!file) return\n    setFieldValue('fileUploaded', file)\n  }, [file, setFieldValue])\n  return (\n    <SectionContainer>\n      <Title type=\"subOne\" title={labels.fileUpload} />\n      <div className=\"mt-8\">\n        <div className=\"flex\">\n          <Title type=\"subTwo\" title=\"Attach File &#x2739;\" />\n          {errors.fileUploaded && touched.fileUploaded && <Error>{errors.fileUploaded}</Error>}\n        </div>\n        <TwoColumnContainer>\n          <FileDropzone errors={errors.fileUploaded && touched.fileUploaded} handleFile={handleFile} style={{height: '10.625rem'}} file={file}/>\n          <InfoBox>\n            Helper text here can explain something and have space for a link to learn more\n          </InfoBox>\n        </TwoColumnContainer>\n      </div>\n    </SectionContainer>\n  )\n}\nexport default FileDrop","export default __webpack_public_path__ + \"static/media/sarcophagus.305a5839.svg\";","import React from 'react'\nimport { labels } from '../../constants'\nimport SectionContainer from '../layout/SectionContainer'\nimport Title from '../layout/Title'\nimport sarcophagusIcon from '../../assets/images/sarcophagus.svg'\n\nconst PageHeading = () => (\n  <SectionContainer>\n    <Title type=\"main\" title={labels.createSarco} icon={sarcophagusIcon} />\n    <div className=\"text-md font-normal\">\n      Excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. \n    </div>\n  </SectionContainer>\n)\n\nexport default PageHeading","import React from 'react'\nimport classnames from 'classnames'\n\nconst heightOptions = {\n  sm: '1.25rem',\n  md: '1.88rem',\n  lg: '2.625rem',\n  xl: '6.5rem'\n}\n\nconst baseText = \"w-full pl-4 text-md bg-black font-normal text-white placeholder-text border remove-input-steps focus:outline-none\"\nconst borderText = \"border border-gray-500\"\nconst errorBorderText = \"border border-red\"\n\nconst TextInput = ({ type, height=\"md\", iPlaceholder=\"\", error, errored, ...rest }) => (\n  <input type={type} className={errored ? classnames(baseText, iPlaceholder, errorBorderText) : classnames(baseText, borderText, iPlaceholder)} style={{height: heightOptions[height], lineHeight: '1.4357rem'}} {...rest}/>\n)\n\nconst textareaPadding = \"p-2\"\nconst hidden = \"overflow-hidden\"\nconst TextAreaInput = ({ type, height=\"md\", error, errored, ...rest }) => (\n  <textarea type={type} className={errored ? classnames(baseText, textareaPadding, hidden, errorBorderText) : classnames(baseText, borderText, hidden, textareaPadding)} style={{height: heightOptions[height], lineHeight: '1.4357rem'}} {...rest} />\n)\n\nconst RadioButton = ({type, value, children, ...rest}) => (\n  <div className=\"text-sm\" style={{lineHeight: '2.125rem'}}>\n    <input id={value} type={type} {...rest}/>\n    <label htmlFor={value}>{children}</label>\n  </div>\n)\n\nconst Input = ({ type='text', ...rest} ) => {\n  if(type === \"text\" || type === \"number\") return <TextInput type={type} {...rest} />\n  if(type === \"textarea\") return <TextAreaInput type={type} {...rest} />\n  if(type === \"radio\") return <RadioButton type={type} {...rest} />\n  return <></>\n}\n\nexport default Input","import React from 'react'\nimport Error from '../Error'\nimport { labels } from '../../constants'\nimport InfoBox from '../layout/InfoBox'\nimport Input from '../layout/Input'\nimport SectionContainer from '../layout/SectionContainer'\nimport Title from '../layout/Title'\nimport TwoColumnContainer from '../layout/TwoColumnContainer'\n\nconst NameAndRecipient = ({values, errors, touched, handleChange, handleKey}) => (\n  <SectionContainer>\n    <Title type=\"subOne\" title={labels.nameAndRecipient} />\n\n    <TwoColumnContainer>\n      <div>\n        <div className=\"flex\">\n          <Title type=\"subTwo\" title=\"Title &#x2739;\" />\n          {errors.name && touched.name && <Error>{errors.name}</Error>}\n        </div>\n        <Input type=\"text\" height=\"lg\" placeholder=\"\" errored={errors.name && touched.name} error={errors.name} name=\"name\" value={values.name} onChange={handleChange} maxLength={256}/>\n      </div>\n      <InfoBox style={{marginTop: '1.75rem'}}>\n          Helper text here can explain something and have space for a link to learn more\n      </InfoBox>\n    </TwoColumnContainer>\n    \n    <TwoColumnContainer>\n      <div>\n        <div className=\"flex\">\n          <Title type=\"subTwo\" title=\"Recipient &#x2739;\" />\n          {errors.recipientPublicKey && touched.recipientPublicKey && <Error>{errors.recipientPublicKey}</Error>}\n        </div>\n        <Input name=\"recipientPublicKey\" value={values.recipientPublicKey} errored={errors.recipientPublicKey && touched.recipientPublicKey} error={errors.recipientPublicKey} onChange={(e) => {handleChange(e); handleKey(e.target.value)}} type=\"textarea\" height=\"xl\" placeholder=\"0x........00000\" />         \n      </div>\n      <InfoBox style={{marginTop: '1.75rem'}}>\n        <div className=\"border-b border-gray-400 mb-4\" style={{width: 'fit-content'}}>Eth public key</div>\n        <div className=\"text-gray-400\">Helper text here can explain something and have space for a link to learn more</div>\n      </InfoBox>\n    </TwoColumnContainer>\n  </SectionContainer>\n)\n\nexport default NameAndRecipient","export default __webpack_public_path__ + \"static/media/clock.f0a78ec3.svg\";","import React from 'react'\n\nconst Select = ({  children, ...rest }) => (\n  <select {...rest} className=\"mr-2 border border-gray-500 bg-black pl-2 focus:outline-none\" style={{width: '5.1875rem', height: '2.125rem'}}>\n    { children }\n  </select>\n)\n\nexport default Select","import React from 'react'\nimport { days, hours, minutes } from '../constants'\nimport Select from './layout/Select'\n\nconst CustomTimeSelect = ({handleChange , isDisabled}) => (\n  <div className=\"inline-block\">\n    <div className=\"flex items-center\">\n      <span className=\"mr-4\">Custom</span>\n      <Select defaultValue={days[\"number_365\"]} disabled={isDisabled} onChange={handleChange} name=\"days\">\n        {Object.keys(days).map((key) => <option key={key} value={days[key]}>{days[key]} d</option>)}\n      </Select>\n      <Select onChange={handleChange} name=\"hours\" disabled={isDisabled}>\n        {Object.keys(hours).map((key) => <option key={key} value={hours[key]}>{hours[key]} h</option>)}\n      </Select>\n      <Select onChange={handleChange} name=\"minutes\" disabled={isDisabled}>\n        {Object.keys(minutes).map((key) => <option key={key} value={minutes[key]}>{minutes[key]} m</option>)}\n      </Select>\n    </div>\n  </div>\n)\n\nexport default CustomTimeSelect","import React from 'react'\nimport { labels, monthAhead, threeMonthAhead, weekAhead } from '../../constants'\nimport InfoBox from '../layout/InfoBox'\nimport Input from '../layout/Input'\nimport SectionContainer from '../layout/SectionContainer'\nimport Title from '../layout/Title'\nimport clockIcon from '../../assets/images/clock.svg'\nimport CustomTimeSelect from '../CustomTimeSelect'\nimport { getCustomDateUTC } from '../../utils/datetime'\nimport Error from '../Error'\n\nconst ResurrectionTime = ({values, errors, touched, handleChange, setFieldValue}) => (\n  <SectionContainer>\n    <div className=\"flex\">\n      <Title type=\"subOne\" clock={clockIcon} title={labels.resurrectionTime} />\n      {errors.resurrectionTime && touched.resurrectionTime && <Error>{errors.resurrectionTime}</Error>}\n    </div>\n    <div className=\"flex mt-8 gap-8\">\n      <div className={errors.resurrectionTime && touched.resurrectionTime ? \"border border-red px-8 py-4\" : \"border border-gray-500 px-8 py-4\"} style={{height: '15.25rem', width: '28rem'}}>\n        <div className=\"flex flex-col justify-around h-full text-gray-400 radio-styles\">\n          <Title type=\"resurrection\" title={labels.resurrectionTime} values={values} />\n          {/* One Week */}\n          <Input type=\"radio\" name=\"timeSelect\" onChange={() => {setFieldValue('timeSelect', 'week'); setFieldValue(\"resurrectionTime\", weekAhead); setFieldValue('daysDisplayed', 7)}} checked={values.timeSelect === 'week'} value={weekAhead}>1 week</Input>\n          {/* One Month */}\n          <Input type=\"radio\" name=\"timeSelect\" onChange={() => {setFieldValue('timeSelect', 'month'); setFieldValue(\"resurrectionTime\", monthAhead); setFieldValue('daysDisplayed', 30)}} checked={values.timeSelect === 'month'} value={monthAhead}>1 month</Input>\n          {/* Three Months */}\n          <Input type=\"radio\" name=\"timeSelect\" onChange={() => {setFieldValue('timeSelect', 'threeMonth'); setFieldValue(\"resurrectionTime\", threeMonthAhead); setFieldValue('daysDisplayed', 90)}} checked={values.timeSelect === 'threeMonth'} value={threeMonthAhead}>3 months</Input>\n          {/* Custom */}\n          <Input type=\"radio\" name=\"timeSelect\" onChange={() => null} onClick={() => {setFieldValue('timeSelect', 'custom'); setFieldValue('resurrectionTime', getCustomDateUTC(values.days, values.hours, values.minutes)); setFieldValue('daysDisplayed', values.days)}} checked={values.timeSelect === 'custom'} value={getCustomDateUTC(values.days, values.hours, values.minutes)} custom=\"custom\">\n            <CustomTimeSelect isDisabled={values.timeSelect !== 'custom'} handleChange={handleChange} />\n          </Input>\n        </div>\n      </div>\n      <InfoBox>\n        Set your resurrection time. Helper text here can explain something and have space for a link to learn more\n      </InfoBox>\n    </div>\n  </SectionContainer>\n)\n\n\nexport default ResurrectionTime","import React from 'react'\nimport Error from '../Error'\nimport Input from '../layout/Input'\nimport Title from '../layout/Title'\n\nconst Fees = ({ values, handleChange, errors, touched }) => (\n  <div className=\"grid grid-cols-2 bg-gray-600 p-8 my-8 border border-gray-500\">\n    <div className=\"flex justify-between\">\n      <div className=\"flex flex-col\" style={{width: '6.875rem'}}>\n        <div className=\"flex\">\n          <Title type=\"subTwo\" title=\"Bounty &#x2739;\" />\n          {errors.bounty && touched.bounty && <Error>{errors.bounty}</Error>}\n        </div>\n          <Input type=\"number\" height=\"lg\" iPlaceholder=\"input-placeholder\" errored={errors.bounty && touched.bounty} error={errors.bounty} placeholder=\"100\" name=\"bounty\" value={values.bounty} onChange={handleChange}/>\n      </div>\n      <div className=\"flex flex-col\" style={{width: '6.875rem'}}>\n        <div className=\"flex\">\n          <Title type=\"subTwo\" title=\"Digging Fees &#x2739;\" />\n          {errors.diggingFee && touched.diggingFee && <Error extraPadding=\"ml-3\" >{errors.diggingFee}</Error>}\n        </div>\n        <Input type=\"number\" height=\"lg\" errored={errors.diggingFee && touched.diggingFee} error={errors.diggingFee} iPlaceholder=\"input-placeholder\" placeholder=\"10\" name=\"diggingFee\" value={values.diggingFee} onChange={handleChange}/>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Fees","import React from 'react'\n\nconst ArchTableRow = ({ headerOne, headerTwo, headerThree }) => (\n  <div className=\"grid grid-cols-2 pl-6 text-gray-400 text-sm mb-4\">\n    <div className=\"flex justify-between\" >\n      <div className=\"whitespace-nowrap\" style={{width: '6.875rem'}}>{ headerOne }</div>\n      <div className=\"\" style={{width: '6.875rem'}}>{ headerTwo }</div>\n    </div>\n    <div className=\"grid grid-cols-2\">\n      <div></div>\n      <div className=\"grid grid-cols-2 items-center\">\n        <div></div>\n        <div>\n          { headerThree }\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default ArchTableRow","import React from 'react'\n\nconst PageSelect = ({ page, totalPages, handleNextPage, handlePrevPage, pageNumbers, goToPage }) => (\n  <div className=\"flex flex-col items-end mt-4\">\n    <div className=\"text-md mb-12\" style={{lineHeight: '1.325rem'}}>\n      <button type=\"button\" onClick={() => handlePrevPage()} className={page === 0 ? \"text-gray-500 focus:outline-none cursor-default\" : \"text-white focus:outline-none\"}>{\"<\"}</button> \n      {pageNumbers.map((num) => <button key={num} type=\"button\" disabled={totalPages === 0} onClick={() => goToPage(num)} className={page === num  ? \"px-2 text-white focus:outline-none text-lg font-bold cursor-default\" : \"px-2 text-white focus:outline-none\"}>{num + 1}</button> )}\n      <button type=\"button\" onClick={() => handleNextPage()} className={page >= totalPages ? \"text-gray-500 focus:outline-none cursor-default\" : \"text-white focus:outline-none\"}>{\">\"}</button>\n    </div>\n  </div>\n)\n\nexport default PageSelect","import numeral from 'numeral'\nimport { utils } from 'ethers'\n\nconst ENCRYPTED_BYTE_INCREASE = 113\n\nconst makeNumeral = (bigNumber, decimals) => {\n  return numeral(utils.formatUnits(bigNumber, decimals))\n}\nconst getDecimalNumber = (bigNumber, decimals) => {\n  return makeNumeral(bigNumber, decimals).value()\n}\n\nconst getStorageFee = (archaeologist, file, bigNumber=false) => {\n  const { feePerByte, minimumBounty, minimumDiggingFee } = archaeologist\n  const { size } = file\n  if(!feePerByte || !minimumBounty || !minimumDiggingFee) return \"\"\n  if(!size) return \"\"\n  const calculatedFee = feePerByte.mul(size + (ENCRYPTED_BYTE_INCREASE * 2)).add(minimumBounty).add(minimumDiggingFee)\n  const totalFees = getDecimalNumber(calculatedFee, 18)\n  if(!bigNumber) return totalFees\n  return calculatedFee\n}\n\nexport {\n  ENCRYPTED_BYTE_INCREASE,\n  getStorageFee,\n  getDecimalNumber,\n  makeNumeral\n}","export default __webpack_public_path__ + \"static/media/icon.081a5d9a.svg\";","export default __webpack_public_path__ + \"static/media/iconBlack.2abba048.svg\";","import React, { useEffect, useState } from 'react'\nimport { truncate } from '../../utils';\nimport { getStorageFee } from '../../utils/bigNumbers';\nimport classnames from 'classnames'\nimport icon from '../../assets/images/icon.svg'\nimport iconBlack from '../../assets/images/iconBlack.svg'\nimport { utils } from 'ethers';\n\nconst base = \"grid grid-cols-2 pl-6 text-md\"\nconst baseBorder = \"border border-gray-500 text-white bg-gray-600\"\nconst selectedBorder = \"border border-white text-black bg-white\"\nconst disabledBorder = \"border border-gray-500 text-gray-400\"\n\nconst ArchaeologistsList = ({ archaeologist, file, gtSign, bounty, diggingFee, selected, handleSelected, setFieldValue }) => {\n  const [isDisabled, setIsDisabled ] = useState(true)\n\n  useEffect(() => {\n    if(!bounty || !diggingFee ) return\n    const isBountyLess = archaeologist.minimumBounty.lte(utils.parseEther(bounty.toString()))\n    const isDiggingFeeLess = archaeologist.minimumDiggingFee.lte(utils.parseEther(diggingFee.toString()))\n    if(isBountyLess && isDiggingFeeLess && !!file) setIsDisabled(false)\n    else setIsDisabled(true)\n  },[bounty, diggingFee, archaeologist, file])\n\n  useEffect(() => {\n    if(selected === archaeologist.archaeologist && isDisabled) handleSelected(false, false)\n  }, [archaeologist, selected, isDisabled, handleSelected])\n\n\n  const handleClick = () => {\n    if(isDisabled) return\n    setFieldValue('address', archaeologist.archaeologist); \n    handleSelected(archaeologist, getStorageFee(archaeologist, file, true))\n  }\n  \n  return (\n    <div onClick={handleClick} className={isDisabled ?  classnames(base, disabledBorder) : selected === archaeologist.archaeologist ? classnames(base, selectedBorder) : classnames(base, baseBorder)} style={{height: '4.375rem'}}>\n      <div className=\"flex justify-between items-center\" style={{lineHeight: '1.44375rem'}}>\n        <div className=\"\" style={{width: '6.875rem'}}>{truncate( archaeologist.archaeologist, 20, null)}</div>\n        <div style={{width: '6.875rem'}} className=\"flex items-center\" >\n          <img src={selected === archaeologist.archaeologist ? iconBlack : icon} alt=\"\" className=\"inline-block w-4 h-auto mr-2\"/>\n          {getStorageFee(archaeologist, file)}\n        </div>\n      </div>\n      <div className=\"grid grid-cols-2\">\n        <div></div>\n        <div className=\"grid grid-cols-2 items-center\">\n          <div></div>\n          <div className=\"\" style={{width: 'fit-content'}}>\n            {gtSign} <u>Metrics</u>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default ArchaeologistsList","import { useState, useEffect } from 'react'\n\n\nconst usePagination = (itemsTotal) => {\n    const [ page, setPage ] = useState(0)\n    const [ totalPages, setTotalPages ] = useState(0)\n    const [ pageNumbers, setPageNumbers ] = useState([])\n    const perPage = 5\n    \n    // setTotalPages\n    useEffect(() => { setTotalPages(Math.floor(itemsTotal / perPage))}, [itemsTotal])\n    useEffect(() => { \n        let arr = []\n        for(let i = 0; i <= totalPages; i++) arr.push(i)\n        setPageNumbers(arr)\n    }, [totalPages])\n\n    // user clicks next page\n    const handleNextPage = () => {\n        if(page >= totalPages) return\n        setPage(page => page + 1)\n    }   \n\n    // user clicks prev page\n    const handlePrevPage = () => {\n        if(page === 0) return\n        setPage(page => page - 1)\n    }\n\n    const goToPage = (page) => {\n\t\tsetPage(page)\n\t}\n\n    return { page, perPage, totalPages, handlePrevPage, handleNextPage, pageNumbers, goToPage }\n}\n\nexport default usePagination","import { utils } from 'ethers'\nimport { useState, useEffect } from 'react'\nimport { getStorageFee } from '../../utils/bigNumbers'\nimport usePagination from './usePagination'\n\nconst useArchaeologistsSort = (archaeologists, file, bounty, diggingFee ) => {\n\tconst [ filteredList, setList ] = useState([])\n\tconst { page, perPage, totalPages, handlePrevPage, handleNextPage, goToPage, pageNumbers } = usePagination(archaeologists.length)\n\n\t// set list when archaeologists are loaded\n\tuseEffect(() => {\n\t\tif(!Array.isArray(archaeologists) || !archaeologists.length) return\n\t\tsetList(archaeologists.filter((_, i) => i >= page * perPage && i <= ((page + 1) * perPage) - 1 ))\n\t}, [archaeologists, page, perPage])\n\n\tuseEffect(() => {\n\t\tif(!bounty || !diggingFee || !file) return\n\t\tsetList( archaeologists\n\t\t\t// if file, bounty and digging fee is present sort by fee then\n\t\t\t.sort((a, b) => getStorageFee(b, file) - getStorageFee(a, file))\n\t\t\t// sort disabled to be in the back then\n\t\t\t.sort((a, b) => a.minimumBounty.lte(utils.parseEther(bounty.toString())) && a.minimumDiggingFee.lte(utils.parseEther(diggingFee.toString())) ? -1 : b.minimumBounty.lte(utils.parseEther(bounty.toString())) && b.minimumDiggingFee.lte(utils.parseEther(diggingFee.toString())) ? 1 : 0)\n\t\t\t// filter by page\n\t\t\t.filter((_, i) => i >= page * perPage && i <= ((page + 1) * perPage) - 1 )\n\t\t\t)\n\t}, [bounty, diggingFee, file, page, perPage, archaeologists])\n\n\n  return { filteredList, page, totalPages, handlePrevPage, handleNextPage, goToPage, pageNumbers }\n}\n\nexport default useArchaeologistsSort","import React from 'react'\nimport { labels } from '../../constants'\nimport SectionContainer from '../layout/SectionContainer'\nimport Title from '../layout/Title'\nimport Fees from './Fees'\nimport ArchTableRow from './ArchTableRow'\nimport PageSelect from './PageSelect'\nimport ArchaeologistsList from './ArchaeologistsList'\nimport useArchaeologistsSort from '../customHooks/useArchaeologistsSort'\n\nconst PickArchaeologist = ({ archaeologists, handleSelected, archSelected, file, values, handleChange, setFieldValue, errors, touched }) => {\n  const { bounty, diggingFee } = values\n  const { filteredList, page, totalPages, handlePrevPage, handleNextPage, goToPage, pageNumbers } = useArchaeologistsSort(archaeologists, file, bounty, diggingFee )\n\n  return (\n    <SectionContainer border={false}>\n      <Title type=\"subOne\" title={labels.pickArchaeologist} />\n      <Fees values={values} handleChange={handleChange} errors={errors} touched={touched} />\n      \n      <ArchTableRow headerOne={`Archaeologists (${archaeologists.length})`} headerTwo=\"Fee\" headerThree=\"Metrics\" />\n        {filteredList.map( (archaeologist, i) => \n          <ArchaeologistsList \n          key={`${i}${archaeologist.archaeologist}`} \n          setFieldValue={setFieldValue} \n          selected={archSelected}\n          handleSelected={handleSelected} \n          archaeologist={archaeologist} \n          file={file} \n          bounty={bounty} \n          diggingFee={diggingFee} \n          gtSign=\"&#62;\"\n          />\n          )}\n      {/* Once Pagination is added this will change */}\n      {archaeologists.length > 0 && <PageSelect \n          page={page} \n          totalPages={totalPages} \n          handlePrevPage={handlePrevPage} \n          handleNextPage={handleNextPage}\n          pageNumbers={pageNumbers}\n          goToPage={goToPage} />}\n    </SectionContainer>\n  )\n}\nexport default PickArchaeologist","import { useState, useEffect, useCallback } from \"react\"\nimport { encrypt } from 'ecies-geth'\nimport { utils } from 'ethers'\nimport { hexToBytes } from '../../utils/bytes'\n\nconst useFileEncryption = () => {\n  const [ file, setFile ] = useState(false)\n  const [ fileType, setFileType ] = useState(false)\n  const [ recipientPublicKey, setRecipientPublicKey ] = useState(false)\n  const [ fileByteArray, setFileByteArrayArray ] = useState(false)\n  const [ fileEncryptedRecipient, setFileEncryptedRecipient ] = useState(false)\n  const [ archaeologistPublicKey, setArchaeologistAddress] = useState(false)\n  const [ doubleEncryptedFile, setDoubleEncryptedFile ] = useState(false)\n  const [ assetDoubleHash, setAssetDoubleHash ] = useState(false)\n\n  useEffect(() => {\n    if(!file) return\n    try {\n      const reader = new FileReader()\n      reader.readAsArrayBuffer(file)\n      reader.onload = (e) => {\n        const result = e.target.result\n        const view = new Uint8Array(result)\n        setFileByteArrayArray(view)\n      } \n    } catch (e) {\n      console.error(e)\n    }\n  }, [file])\n\n  const firstEncryption = useCallback( async () => {\n    try {\n      const recipPubKeyBytes = hexToBytes(recipientPublicKey, true)\n      const encrypted = await encrypt(recipPubKeyBytes, fileByteArray)\n      setFileEncryptedRecipient(encrypted)\n\n      const hashedOnce = utils.keccak256(encrypted)\n      const hashedTwice = utils.keccak256(hashedOnce)\n      setAssetDoubleHash(utils.arrayify(hashedTwice))\n    } catch (e) {\n      console.error(e)\n    }\n  }, [fileByteArray, recipientPublicKey])\n\n  useEffect(() => {\n    if(!fileByteArray || !recipientPublicKey) return\n    firstEncryption()\n  }, [fileByteArray, recipientPublicKey, firstEncryption])\n\n  const secondEncryption = useCallback( async () => {\n    try {\n      const archPubKeyBytes = hexToBytes(archaeologistPublicKey, true)\n      const encrypted = await encrypt(archPubKeyBytes, fileEncryptedRecipient)\n      setDoubleEncryptedFile(encrypted)\n      setFileType(file.type)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [fileEncryptedRecipient, archaeologistPublicKey, file])\n\n  useEffect(() => {\n    if(!fileEncryptedRecipient || !archaeologistPublicKey) return\n    secondEncryption()\n  },[fileEncryptedRecipient, archaeologistPublicKey, secondEncryption])\n\n  return { \n    file,\n    fileType,\n    setFile,\n    setRecipientPublicKey,\n    setArchaeologistAddress,\n    doubleEncryptedFile,\n    assetDoubleHash\n  }\n}\n\nexport default useFileEncryption","import { useState } from \"react\"\nimport { BigNumber, utils } from 'ethers'\nimport useFileEncryption from '../customHooks/useFileEncryption'\n\nconst useSarcophagusCreate = (createSarcophagus) => {\n  const [ storageFee, setStorageFee ] = useState(false)\n  const { file, fileType, setFile, setRecipientPublicKey, setArchaeologistAddress, doubleEncryptedFile, assetDoubleHash } = useFileEncryption()\n  const [ selectedArchaeologist, setSelected ] = useState(false)\n  \n  const handleArchaeologistSelect = (selectedArchaeologist, storageFee) => {\n    setStorageFee(storageFee)\n    setSelected(selectedArchaeologist)\n    setArchaeologistAddress(selectedArchaeologist?.currentPublicKey)\n  }\n\n  const handleKey = (key) => {\n    if(key && utils.isHexString(key, 64)) {\n      setRecipientPublicKey(key)\n    }\n    return\n  }\n\n  const handleEmbalming = (values, history) => {\n    const { bounty, diggingFee, recipientPublicKey, resurrectionTime, name } = values\n    if(!selectedArchaeologist || !assetDoubleHash || !bounty || !diggingFee || !recipientPublicKey || !resurrectionTime || !name || !storageFee) return\n    const resurrectionTimeUTC = BigNumber.from(resurrectionTime / 1000) // This might change\n    const diggingFeeBN = utils.parseEther(diggingFee.toString())\n    const bountyBN = utils.parseEther(bounty.toString())\n    const recipientPublicKeyBA = utils.arrayify(recipientPublicKey)\n    createSarcophagus(name, selectedArchaeologist, resurrectionTimeUTC, storageFee, diggingFeeBN, bountyBN, assetDoubleHash, recipientPublicKeyBA, doubleEncryptedFile, fileType, history)\n  }\n\n  return {  file, setFile, handleArchaeologistSelect, selectedArchaeologist, handleEmbalming, setRecipientPublicKey, handleKey }\n}\n\nexport default useSarcophagusCreate","import React from 'react'\nimport classnames from 'classnames'\n\nconst heightOptions = {\n  sm: '1.25rem',\n  md: '1.88rem',\n  lg: '2.65rem'\n}\n\nconst lineHeightOptions = {\n  default: '1.625rem'\n}\n\nconst base = \"text-md font-medium flex justify-center items-center focus:outline-none\"\nconst border = \"text-white border border-white\"\nconst disabled = \"text-gray-400 border border-500\"\nconst error = \"\"\n\nconst Button = ({label, isDisabled=false, _classNames, errors, height=\"md\", ...rest}) => (\n  <button \n    className={isDisabled ? classnames(base, disabled, _classNames) : errors ? classnames(base, disabled, error, _classNames) : classnames(base, border, _classNames)} \n    style={{height: heightOptions[height], width: '12.75rem', lineHeight: lineHeightOptions['default']}}\n    {...rest}\n  >\n    { label }\n  </button>\n)\n\nexport default Button","import React from 'react'\nimport { Formik } from 'formik'\nimport { useData } from '../BlockChainContext'\nimport FileDrop from './FileDrop'\nimport PageHeading from './PageHeading'\nimport NameAndRecipient from './NameAndRecipient'\nimport ResurrectionTime from './ResurrectionTime'\nimport PickArchaeologist from './PickArchaeologist'\nimport { initialValues } from './initialValues'\nimport { validationSchema } from './validationSchema'\nimport useSarcophagusCreate from '../customHooks/useSarcophagusCreate'\nimport Button from '../layout/Button'\nimport { useHistory } from 'react-router-dom';\n\nconst CreateSarcophagus = () => {\n  const history = useHistory()\n  const { archaeologists, createSarcophagus } = useData()\n  const {file, setFile, handleArchaeologistSelect, handleEmbalming, selectedArchaeologist, handleKey} = useSarcophagusCreate(createSarcophagus)\n  const handleSubmit = (values) => {\n    handleEmbalming(values, history)\n  }\n  return (\n    <Formik initialValues={initialValues()} validationSchema={validationSchema()} onSubmit={handleSubmit}>\n      {({ values, errors, touched, handleChange, handleBlur, handleSubmit, setFieldValue }) => (\n        <form className=\"ml-8 px-14\" onSubmit={handleSubmit}>\n          <PageHeading />\n          <NameAndRecipient values={values} errors={errors} touched={touched} handleChange={handleChange} handleKey={handleKey}/>\n          <FileDrop file={file} handleFile={setFile} errors={errors} touched={touched} setFieldValue={setFieldValue} />\n          <ResurrectionTime values={values} errors={errors} touched={touched} handleChange={handleChange} setFieldValue={setFieldValue}/>\n          <PickArchaeologist errors={errors} touched={touched} archaeologists={archaeologists} file={file} values={values} handleChange={handleChange} handleEmbalming={handleEmbalming} handleSelected={handleArchaeologistSelect} archSelected={selectedArchaeologist?.archaeologist || \"\"} setFieldValue={setFieldValue}/>\n          <div className=\"flex flex-col items-end\">\n            <Button label=\"Finish\" height=\"lg\" type=\"submit\" />\n          </div>\n        </form>\n      )}\n    </Formik>\n  )\n}\n\nexport default CreateSarcophagus","const initialValues = () => {\n  return {\n    recipientPublicKey: \"0xd5f5868912811ad4e92cd737770488ed4576ee87f14db9b9d50c589a1f7c6a5d52922fd0e8ff02ba0e18fd023f1b175deeab9294791520a04acb34537fb1b7f8\",\n    name: \"\",\n    resurrectionTime: \"\",\n    bounty: \"\",\n    diggingFee: \"\",\n    days: 365,\n    hours: 0,\n    minutes: 0,\n    custom: false,\n    fileUploaded: false,\n    address: \"\",\n    daysDisplayed: 0,\n  }\n}\n\nexport {\n  initialValues\n}","import { utils } from 'ethers'\nimport * as Yup from 'yup'\n\nexport const validationSchema = () => {\n  return Yup.object().shape({\n    recipientPublicKey: Yup.string()\n      .test(\n        'required',\n        'Recipient Address is required',\n        (value) => !!value)\n      .test(\n        'validDataHextString',\n        'Please enter a valid public key',\n        (value) => utils.isHexString(value, 64)\n      ),\n    name: Yup.string().required('Name is required'),\n    resurrectionTime: Yup.number().required('Resurrection time is required'),\n    bounty: Yup.number().required('Bounty is required'),\n    diggingFee: Yup.number().required('Digging Fee is required'),\n    days: Yup.number()\n      .when(\"custom\", {\n        is: true,\n        then: Yup.number().required(\"Please select Days\")\n      }),\n    hours: Yup.number()\n    .when(\"custom\", {\n      is: true,\n      then: Yup.number().required(\"Please select Hours\")\n    }),\n    minutes: Yup.number()\n    .when(\"custom\", {\n      is: true,\n      then: Yup.number().required(\"Please select minutes\")\n    }),\n    custom: Yup.bool(),\n    fileUploaded: Yup.mixed()\n      .test(\n        'required',\n        'Please upload a file',\n        (value) => !!value\n      )\n      .test(\n      'filesize',\n      'Files must not be larger than 2.9MB',\n      (value) => value ? value.size <= 2999800 : true\n    ),\n    address: Yup.string().required('Please select an archaeologist')\n  }).nullable()\n}","export default __webpack_public_path__ + \"static/media/tomb.a63833ca.svg\";","import React from 'react'\nimport { useResurrectionTimer } from '../customHooks/useTimers'\n\nconst ResurrectionTimer = ({resurrectionTime}) => {\n    const { timeTillResurrection } = useResurrectionTimer(resurrectionTime)\n    return (\n        <div className=\"text-sm text-gray-400\" style={{lineHeight: '1.0625rem'}}>\n            Resurrection: {timeTillResurrection}\n        </div>\n    )\n}\n\nexport default ResurrectionTimer","\nimport { useState, useEffect } from \"react\"\nimport { TIMER_DEFAULT } from \"../../constants\"\nimport { makeNumeral } from \"../../utils/bigNumbers\"\nimport { getTimeRemaining } from \"../../utils/datetime\"\n\n\nconst useResurrectionTimer = (resurrectionTime) => {\n    const [ time ] = useState(resurrectionTime)\n    const [ timeTillResurrection, setTime ] = useState(TIMER_DEFAULT)\n\n    useEffect(() => {\n        // Multiply time by 1000 to get correct UTC time\n        const UTCTime = makeNumeral(time, 0).value() * 1000\n        const resurrectionDate = new Date(UTCTime)\n        const timer = setInterval(() => {\n            const remainingTime = getTimeRemaining(resurrectionDate)\n            setTime(remainingTime)\n            if(Math.sign(UTCTime - Date.now().valueOf() < 0)) clearInterval()\n            }, 1000)\n        return () => clearInterval(timer)\n    }, [time])\n    \n    return {timeTillResurrection}\n}\n\nexport { useResurrectionTimer }","import React from 'react'\nimport { useData } from '../BlockChainContext'\nimport useCheckStatus from '../customHooks/useCheckStatus'\nimport Title from '../layout/Title'\nimport question from '../../assets/images/question.svg'\nimport { useSarcophagi } from '../BlockChainContext/useSarcophagi'\nimport { STATUSES } from '../../constants'\nimport ResurrectionTimer from './ResurrectionTimer'\nimport Button from '../layout/Button'\n\nconst PendingActionSarcophagus = ({sarcophagus, currentStatus, error, handleApprove}) => {\n  return (\n    <div className=\"absolute top-0 -mt-3\" style={{right: '1rem'}}>\n      {currentStatus === STATUSES.SARCOPHAGUS_AWAIT_SIGN \n      ? (\n        <Button onClick={handleApprove} label=\"Approve\" />\n        ) : (\n        <>{currentStatus}</>\n      )}\n    </div>\n    )\n}\n\nconst CompletedSarcophagus = ({sarcophagus}) => {\n  // TODO Will need to add active and disabled states\n  return (\n    <div className=\"absolute\" style={{right: '1rem', top: '1rem'}}>\n      <span className=\"text-gray-500 underline\">{\">\"} Rewrap</span>\n    </div>\n  )\n}\n\nconst Sarcophagus = ({sarcophagus, updateSarcophagus}) => {\n  const { currentStatus, error } = useCheckStatus(sarcophagus.AssetDoubleHash, sarcophagus)\n  const handleApprove = async () => {\n    await updateSarcophagus(sarcophagus)\n  }\n  return (\n    <div className=\"border border-gray-500 text-white text-md flex px-4 my-4 items-center relative\" style={{height: '4.375rem', width: '24.6875rem'}}>\n      <div>\n          <div className=\"text-base font-bold text-white\" style={{lineHeight: '1.625rem'}}>{sarcophagus.name}</div>\n          <ResurrectionTimer resurrectionTime={sarcophagus.resurrectionTime} />\n      </div>\n      {currentStatus === STATUSES.PROCESS_COMPLETE \n        ? (<CompletedSarcophagus sarcophagus={sarcophagus} />)\n        : (<PendingActionSarcophagus sarcophagus={sarcophagus} error={error} currentStatus={currentStatus} handleApprove={handleApprove}/>)\n      }\n  </div>\n  )\n}\n\nconst SarcophagiList = () => {\n  const { sarcophagusContract, updateSarcophagus } = useData()\n  const { sarcophagi, pendingCount } = useSarcophagi(sarcophagusContract)\n  return (\n    <div className=\"\" style={{width: '24.6875rem'}}>\n      <div className=\"flex justify-between\">\n        <div className=\"flex\">\n          <Title type=\"subOne\" title={`Sarcophagi (${sarcophagi?.length})`} />\n          <img alt=\"\" src={question} className=\"ml-2\"/>\n        </div>\n        <Title type=\"subOne\" title={`Pending: (${pendingCount})`} />\n      </div>\n      <div className=\"mt-8\">\n        {sarcophagi?.map((sarcophagus, i) => <Sarcophagus key={sarcophagus.archaeologist + i.toString()} sarcophagus={sarcophagus} updateSarcophagus={updateSarcophagus}/>)}\n      </div>\n    </div>\n  )\n}\nexport default SarcophagiList\n","import React from 'react'\nimport Title from '../layout/Title'\nimport icon from '../../assets/images/tomb.svg'\nimport SarcophagiList from './SarcophagiList'\n\nconst Tomb = () => {\n  return (\n    <div className=\"pt-8 px-8 flex justify-between sm:flex-wrap\" style={{minheight: 'calc(100vh - 16rem)'}}>\n      <div className=\"\" style={{width: '27.75rem'}}>\n        <Title type=\"subOne\" icon={icon} title=\"Tomb\" />\n        <div className=\"mt-8 text-md text-white\" style={{lineHeight: '1.4375rem'}}>\n          <div>Your tomb contains your encrypted Sarcophagi. At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias.</div>\n\n          <div className=\"mt-4\">Excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga.</div>\n        </div>\n      </div>\n      <SarcophagiList />\n    </div>\n  )\n}\n\nexport default Tomb","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport CreateSarcophagus from './create'\nimport Tomb from './Tomb'\n\nconst Body = () => (\n  <div className=\"border border-gray-500 ml-12 p-4 mb-8\">\n    {/* <Route path=\"/\" exact component={<div></div>} /> */}\n    <Route path=\"/\" component={Tomb} exact/>\n    <Route path=\"/create\" component={CreateSarcophagus} exact />\n    {/* <Route path=\"/rewrap\" component={<div></div>}/> */}\n  </div>\n)\n\nexport default Body","import packageJson from '../../package.json'\n\nconst Footer = () => {\n  return (\n    <div className=\"text-gray-400 text-xs my-4\">\n      <div className=\"pb-6 text-center\">\n        <div>v{packageJson.version + '+' + process.env.REACT_APP_GIT_HASH}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer","export default __webpack_public_path__ + \"static/media/logo.46d0239c.png\";","export default __webpack_public_path__ + \"static/media/wallet.7d4fae45.svg\";","import React from \"react\"\nimport { NavLink as Link } from \"react-router-dom\"\n\nconst NavLink = ({ title, dest, ...rest }) => (\n  <Link to={dest} activeClassName=\"border-b-4 border-white text-white\" className=\"ml-6 pb-2 text-sm text-gray-300\" exact {...rest}>\n    { title }\n  </Link>\n)\n\n\nexport default NavLink","import React  from 'react'\nimport logo from '../assets/images/logo.png'\nimport wallet from '../assets/images/wallet.svg'\nimport { truncate } from '../utils'\nimport { useWeb3 } from '../web3'\nimport { connect } from '../web3/userSupplied'\nimport icon from '../assets/images/icon.svg'\nimport NavLink from './nav/NavLink'\n\nconst AccountDisplay = () => {\n  const { account } = useWeb3()\n\n  if (account) {\n    return (\n      <div className=\"flex justify-center items-center\">\n        {truncate(account, 25)}\n        <img src={icon} alt=\"\" className=\"ml-6\" />\n      </div>\n    )\n  } else {\n    return (\n      <button className=\"underline\" onClick={() => connect()}>\n        Connect Web3 Account\n      </button>\n    )\n  }\n}\n\nconst Tabs = () => {\n  return (\n    <ul className=\"flex\">\n      <li className=\"pr-4 py-1 \">\n        <NavLink dest=\"/\" title=\"My Tomb\" />\n      </li>\n      <li className=\"px-4 py-1 \">\n        <NavLink dest=\"/create\" title=\"Create\" />\n      </li>\n      <li className=\"px-4 py-1 \">\n        <NavLink dest=\"/resurrect\" title=\"Resurrect\" />\n      </li>\n    </ul>\n  )\n}\n\nconst Top = () =>  (\n  <div className=\"flex justify-between items-center mb-16\" style={{height: '4rem'}}>\n    <div className=\"flex items-center\">\n      <div className=\"w-10 p-1 mr-4\">\n        <img src={logo} alt=\"logo\" />\n      </div>\n      <Tabs />\n    </div>\n    <div className=\"flex items-center\">\n      <div>\n        <img src={wallet} alt=\"wallet\" className=\"\" />\n      </div>\n      <div className=\"ml-3 text-sm text-gray-300\">\n        <AccountDisplay />\n      </div>\n    </div>\n  </div>\n)\n\n\n\n\n\nconst Header = () => {\n  return (\n    <div className=\"pt-2\">\n      <Top />\n    </div>\n  )\n}\n\nexport default Header","import React from 'react'\nimport { BrowserRouter as Router, Switch } from 'react-router-dom'\nimport Body from '../components/Body'\nimport Footer from '../components/Footer'\nimport Header from '../components/Header'\nconst AppRouter = () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Body />\n    </Switch>\n    <Footer />\n  </Router>\n)\n\nexport default AppRouter","import AppRouter from './router'\n\nconst App = () => {\n  return (\n    <div className=\"container relative min-h-screen\">\n      <AppRouter />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Web3Provider } from './web3/index';\nimport { DataProvider } from './components/BlockChainContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3Provider>\n      <DataProvider>\n        <App />\n      </DataProvider>\n    </Web3Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { utils } from \"ethers\"\n\nconst convertToUTC = date => {\n  return Date.UTC(\n    date.getFullYear(),\n    date.getMonth(),\n    date.getDate(),\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds()\n  )\n}\n\nconst getUTCDate = numDays => {\n  let today = new Date()\n  today.setDate(today.getDate() + numDays)\n  const utc = convertToUTC(today)\n  return utc\n}\n\nconst getDate = maximumResurrectionTime => {\n  return new Date(Number(utils.formatUnits(maximumResurrectionTime, 'wei')).toFixed(0))\n}\n\nconst getCustomDateUTC = (days=0, hours=0, minutes=0) => {\n  let today = new Date()\n  today.setDate(today.getDate() + days)\n  today.setHours(today.getHours() + hours)\n  today.setMinutes(today.getMinutes() + minutes)\n  const utc = convertToUTC(today)\n  return utc\n}\n\nconst getTimeRemaining = (endtime) => {\n  const total = endtime - Date.parse(new Date());\n  const seconds = Math.floor( (total/1000) % 60 );\n  const minutes = Math.floor( (total/1000/60) % 60 );\n  const hours = Math.floor( (total/(1000*60*60)) % 24 );\n  const days = Math.floor( total/(1000*60*60*24) );\n  return `${days} days ${hours}:${minutes}:${seconds}`\n}\n\nexport { convertToUTC, getUTCDate, getDate, getCustomDateUTC, getTimeRemaining }\n","const truncate = (fullStr, strLen, separator, sepLength) => {\n  if (fullStr.length <= strLen) return fullStr;\n\n  separator = separator || '...'\n\n  const sepLen = separator.length\n  const charsToShow = strLen - sepLen\n  const frontChars = Math.ceil(sepLength || charsToShow / 2 + 1) // accounts for the \"0x\"\n  const backChars = Math.floor(charsToShow / 2 - 1) // accounts for the \"0x\"\n\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n}\n\nconst createLocationNumberObject = (length, day = false) => {\n  const numArray = Array.from({ length: length + 1 }, (_, k) => {\n    if (k === 0) return 0;\n    return k;\n  });\n  if (day) numArray.shift();\n  const object = {};\n  numArray.forEach((number) => (object[`number_${number}`] = number));\n  return object;\n};\n\n\nexport {\n  truncate,\n  createLocationNumberObject,\n}"],"sourceRoot":""}